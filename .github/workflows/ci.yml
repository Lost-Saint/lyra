name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci || npm install
      continue-on-error: true

    - name: Validate manifest files
      run: |
        # Check if manifest.json is valid JSON
        if ! python3 -m json.tool manifest.json > /dev/null; then
          echo "Error: manifest.json is not valid JSON"
          exit 1
        fi
        echo "✓ manifest.json is valid"

        # Check Chrome manifest if it exists
        if [ -f "manifest.chrome.json" ]; then
          if ! python3 -m json.tool manifest.chrome.json > /dev/null; then
            echo "Error: manifest.chrome.json is not valid JSON"
            exit 1
          fi
          echo "✓ manifest.chrome.json is valid"
        fi

    - name: Check required files
      run: |
        # Check that all files referenced in manifest exist or can be created
        echo "Checking required files..."

        required_files=(
          "src/popup.html"
          "src/popup.js"
          "src/popup.css"
          "LICENSE.md"
        )

        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "Error: Required file $file is missing"
            exit 1
          fi
          echo "✓ $file exists"
        done

    - name: Lint JavaScript
      run: |
        # Basic JavaScript syntax check
        find src -name "*.js" -exec node -c {} \;
        echo "✓ JavaScript files are syntactically valid"

    - name: Validate HTML
      run: |
        # Basic HTML validation - check for basic structure
        if [ -f "src/popup.html" ]; then
          if ! grep -q "<!DOCTYPE html>" src/popup.html; then
            echo "Warning: popup.html missing DOCTYPE declaration"
          fi
          if ! grep -q "<html" src/popup.html; then
            echo "Error: popup.html missing html tag"
            exit 1
          fi
          echo "✓ popup.html has basic HTML structure"
        fi

  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Make build script executable
      run: chmod +x build.sh

    - name: Build extensions
      run: ./build.sh

    - name: Check build outputs
      run: |
        echo "Build directory contents:"
        ls -la build/

        # Check that the expected files were created
        VERSION=$(grep '"version"' manifest.json | cut -d'"' -f4)

        if [ ! -f "build/lyra-firefox-$VERSION.xpi" ]; then
          echo "Error: Firefox build not found"
          exit 1
        fi

        if [ ! -f "build/lyra-chrome-$VERSION.zip" ]; then
          echo "Error: Chrome build not found"
          exit 1
        fi

        echo "✓ Both Firefox and Chrome builds created successfully"

    - name: Upload Firefox build
      uses: actions/upload-artifact@v4
      with:
        name: firefox-extension
        path: build/*.xpi
        retention-days: 30

    - name: Upload Chrome build
      uses: actions/upload-artifact@v4
      with:
        name: chrome-extension
        path: build/*.zip
        retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Scan for secrets
      run: |
        # Basic check for common secrets in source files
        echo "Scanning for potential secrets..."

        # Check for API keys, tokens, passwords
        if grep -r -i "api.key\|apikey\|token\|password\|secret" src/ --include="*.js" --include="*.html" --include="*.css"; then
          echo "Warning: Potential secrets found in source code. Please review."
        else
          echo "✓ No obvious secrets found in source code"
        fi

    - name: Check permissions
      run: |
        echo "Checking manifest permissions..."
        permissions=$(grep -A 10 '"permissions"' manifest.json)
        echo "Declared permissions:"
        echo "$permissions"

        # Flag potentially dangerous permissions
        dangerous_perms=("webRequest" "webRequestBlocking" "tabs" "history" "bookmarks")

        for perm in "${dangerous_perms[@]}"; do
          if echo "$permissions" | grep -q "$perm"; then
            echo "⚠️  Warning: Extension uses potentially sensitive permission: $perm"
          fi
        done

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, build, security-scan]
    if: github.event_name == 'release'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Make build script executable
      run: chmod +x build.sh

    - name: Build extensions
      run: ./build.sh

    - name: Get version
      id: version
      run: |
        VERSION=$(grep '"version"' manifest.json | cut -d'"' -f4)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Upload Firefox extension to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/lyra-firefox-${{ steps.version.outputs.version }}.xpi
        asset_name: lyra-firefox-${{ steps.version.outputs.version }}.xpi
        asset_content_type: application/x-xpinstall

    - name: Upload Chrome extension to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/lyra-chrome-${{ steps.version.outputs.version }}.zip
        asset_name: lyra-chrome-${{ steps.version.outputs.version }}.zip
        asset_content_type: application/zip
